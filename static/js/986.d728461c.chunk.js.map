{"version":3,"file":"static/js/986.d728461c.chunk.js","mappings":"2TACMA,EAAU,mCACHC,EAAa,kBAAAC,EAAAA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACJC,EAAAA,EAAAA,IAAU,2DAADC,OAC6Bb,EAAO,oBAClE,KAAD,EAFa,OAARO,EAAQE,EAAAK,KAAAL,EAAAM,OAAA,SAGPR,EAASS,MAAI,wBAAAP,EAAAQ,OAAA,GAAAX,EAAA,MACrBY,MAAA,KAAAC,UAAA,EACYC,EAAgB,SAAAC,GAAA,OAAAC,EAAAA,IAAAnB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAkB,EAAMC,GAAQ,IAAAC,EAAA,OAAArB,EAAAA,EAAAA,KAAAI,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACdC,EAAAA,EAAAA,IAAU,sCAADC,OACCW,EAAQ,aAAAX,OAAYb,EAAO,oBACjE,KAAD,EAFoB,OAAfyB,EAAeC,EAAAZ,KAAAY,EAAAX,OAAA,SAIdU,EAAgBT,MAAI,wBAAAU,EAAAT,OAAA,GAAAM,EAAA,MAC5BL,MAAA,KAAAC,UAAA,EAEYQ,EAAS,SAAAC,GAAA,OAAAC,EAAAA,IAAA1B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyB,EAAMN,GAAQ,IAAAO,EAAA,OAAA3B,EAAAA,EAAAA,KAAAI,MAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EACHC,EAAAA,EAAAA,IAAU,sCAADC,OACHW,EAAQ,qBAAAX,OAAoBb,EAAO,oBACzE,KAAD,EAFwB,OAAnB+B,EAAmBC,EAAAlB,KAAAkB,EAAAjB,OAAA,SAIlBgB,EAAoBf,MAAI,wBAAAgB,EAAAf,OAAA,GAAAa,EAAA,MAChCZ,MAAA,KAAAC,UAAA,EACYc,EAAY,SAAAC,GAAA,OAAAC,EAAAA,IAAAhC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA+B,EAAMZ,GAAQ,IAAAa,EAAA,OAAAjC,EAAAA,EAAAA,KAAAI,MAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA3B,KAAA,EACHC,EAAAA,EAAAA,IAAU,sCAADC,OACNW,EAAQ,qBAAAX,OAAoBb,EAAO,oBACzE,KAAD,EAF2B,OAAtBqC,EAAsBC,EAAAxB,KAAAwB,EAAAvB,OAAA,SAGrBsB,EAAuBrB,MAAI,wBAAAsB,EAAArB,OAAA,GAAAmB,EAAA,MACnClB,MAAA,KAAAC,UAAA,EAEYoB,EAAkB,SAAAC,GAAA,OAAAC,EAAAA,IAAAtC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqC,EAAMC,GAAK,IAAAC,EAAA,OAAAxC,EAAAA,EAAAA,KAAAI,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACdC,EAAAA,EAAAA,IAAU,mDAADC,OACe8B,EAAK,aAAA9B,OAAYb,EAAO,oBAC3E,KAAD,EAFmB,OAAd4C,EAAcC,EAAA/B,KAAA+B,EAAA9B,OAAA,SAGb6B,EAAe5B,MAAI,wBAAA6B,EAAA5B,OAAA,GAAAyB,EAAA,MAC3BxB,MAAA,KAAAC,UAAA,C,gGCED,UAjCa,WACX,IAAQ2B,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAYpB,IAXAI,EAAAA,EAAAA,YAAU,WAAO,IAADC,GAAA,YACeA,EAAAA,IAAApD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA7B,SAAAC,IAAA,IAAAkD,EAAA,OAAApD,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAE8BgB,EAAAA,EAAAA,GAAUmB,GAAS,KAAD,EAAtCU,EAAW/C,EAAAK,KACjBuC,EAAQG,GAAa/C,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgD,GAAAhD,EAAA,SAErBiD,QAAQC,IAAGlD,EAAAgD,IAAQ,yBAAAhD,EAAAQ,OAAA,GAAAX,EAAA,mBAEtBY,MAAA,KAAAC,UAAA,CACDyC,EACF,GAAG,CAACd,KACCM,IAASA,EAAKA,KACjB,OAAO,KAGT,IACMS,EADUT,EAAKA,KACSU,KAAI,SAAAC,GAChC,IACMC,EAAU,GAAAnD,OADH,mCACgBA,OAAGkD,EAAME,cAEtC,OACEC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKJ,EAAMM,QACXH,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,SAAOJ,EAAMO,cAChBF,EAAAA,EAAAA,KAAA,OAAKG,IAAKP,EAAYQ,IAAI,OAHnBT,EAAMU,GAMnB,IACA,OAAOL,EAAAA,EAAAA,KAAA,MAAAD,SAAKN,GACd,C,uFCjCQd,EAAc2B,EAAQ,IAAtB3B,UAkCR,UAhCgB,WACd,IAAQD,EAAYC,IAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnC2B,EAAOzB,EAAA,GAAE0B,EAAU1B,EAAA,GAa1B,IAXAI,EAAAA,EAAAA,YAAU,WAAO,IAADuB,GAAA,YACkBA,EAAAA,IAAA1E,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAhC,SAAAC,IAAA,IAAAwE,EAAA,OAAA1E,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEiCsB,EAAAA,EAAAA,IAAaa,GAAS,KAAD,EAA5CgC,EAAcrE,EAAAK,KACpB8D,EAAWE,GAAgBrE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgD,GAAAhD,EAAA,SAE3BiD,QAAQC,IAAGlD,EAAAgD,IAAQ,yBAAAhD,EAAAQ,OAAA,GAAAX,EAAA,mBAEtBY,MAAA,KAAAC,UAAA,CACD4D,EACF,GAAG,CAACjC,KACC6B,IAAYA,EAAQK,QACvB,OAAO,KAET,GAA8B,IAA1BL,EAAQM,cACV,MAAO,uCAET,IACMC,EADaP,EAAQK,QACSlB,KAAI,SAAAqB,GACtC,OACEjB,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASgB,EAAOC,WACpBhB,EAAAA,EAAAA,KAAA,WAAAD,SAAUgB,EAAOE,YAFVF,EAAOV,GAKpB,IACA,OAAOL,EAAAA,EAAAA,KAAA,MAAAD,SAAKe,GACd,C,iLClCaI,EAAmBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2HAO7BC,EAA8BH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4BAOxCG,GAJmBL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iCAIJF,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kC,kBCuE9C,EA1EqB,WAAO,IAADM,EAAAC,EACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAA2B,QAArBL,EAAe,QAAfC,EAACC,EAASI,aAAK,IAAAL,OAAA,EAAdA,EAAgBM,YAAI,IAAAP,EAAAA,EAAI,WAC3CjD,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCuD,EAAOrD,EAAA,GAAEsD,EAAUtD,EAAA,GAgB1B,IAfAI,EAAAA,EAAAA,YAAU,WAAO,IAADmD,GAAA,YACWA,EAAAA,IAAAtG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAzB,SAAAC,IAAA,IAAAoG,EAAA,OAAAtG,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEiCS,EAAAA,EAAAA,IAAiB0B,GAAS,KAAD,EAAhD4D,EAAcjG,EAAAK,KACpB0F,EAAWE,GAAgBjG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgD,GAAAhD,EAAA,SAE3BkG,EAAAA,GAAAA,MAAY,YAAa,CACvBC,SAAUD,EAAAA,GAAAA,SAAAA,SACVE,UAAW,MACV,yBAAApG,EAAAQ,OAAA,GAAAX,EAAA,mBAENY,MAAA,KAAAC,UAAA,CAED2F,EACF,GAAG,CAAChE,KACCyD,IAAYA,EAAQQ,OACvB,OAAO,KAET,IACMC,EADI,GAAAnG,OAAM0F,EAAQU,cACNC,MAAM,EAAG,GAErBC,EAAS,GAAAtG,OADF,mCACeA,OAAG0F,EAAQa,aACjCC,EAAuC,GAA/BC,OAAOf,EAAQgB,cACvBC,EAAYC,KAAKC,MAAML,GAEvBM,EADWpB,EAAQQ,OACQjD,KAAI,SAAA8D,GACnC,OAAOxD,EAAAA,EAAAA,KAAA,MAAAD,SAAoByD,EAAMvD,MAAjBuD,EAAMnD,GACxB,IACA,OACEP,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACwB,EAA2B,CAAAvB,SAAA,EAC1BC,EAAAA,EAAAA,KAACyD,EAAAA,KAAI,CAACC,GAAI3B,EAAY4B,QAAQ5D,SAAC,aAC/BC,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAACoB,EAAgB,CAAAnB,SAAA,EACfC,EAAAA,EAAAA,KAAA,OAAKG,IAAK4C,EAAW3C,IAAK+B,EAAQyB,kBAClC9D,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGoC,EAAQ0B,MAAM,KAAGjB,EAAK,QAEzB9C,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,eAAaqD,EAAU,QAC1BpD,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,WAAAD,SAAUoC,EAAQ2B,YAClB9D,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAKwD,gBAKbzD,EAAAA,EAAAA,MAAC0B,EAAoB,CAAAzB,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACHD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACyD,EAAAA,KAAI,CAACC,GAAE,OAAUK,SAAS/D,EAAAA,EAAAA,KAACgE,EAAAA,QAAI,IAAIjE,SAAC,YAIvCC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACyD,EAAAA,KAAI,CAACC,GAAE,UAAaK,SAAS/D,EAAAA,EAAAA,KAACiE,EAAAA,QAAO,IAAIlE,SAAC,kBAK/CC,EAAAA,EAAAA,KAACkE,EAAAA,SAAQ,CAACC,UAAUnE,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAAiBA,UACxCC,EAAAA,EAAAA,KAACoE,EAAAA,GAAM,WAKjB,C,gJC5DA,EAvB2B,SAAHtI,GAA+B,IAAzBuI,EAAiBvI,EAAjBuI,kBACtBxC,GAAWC,EAAAA,EAAAA,MAEjB,GAAKuC,EAAL,CAGA,IAAMC,EAAyBD,EAAkB3E,KAAI,SAAA6E,GACnD,IAAM7F,EAAU6F,EAAclE,GAE9B,OACEL,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACyD,EAAAA,KAAI,CACHC,GAAE,GAAAjH,OAAKiC,GACPqF,SAAS/D,EAAAA,EAAAA,KAACwE,EAAAA,QAAY,IACtBvC,MAAO,CAAEC,KAAML,GAAW9B,SAEzBwE,EAAcV,SANVU,EAAclE,GAU3B,IACA,OAAOL,EAAAA,EAAAA,KAAA,MAAAD,SAAKuE,GAhBZ,CAiBF,E,kBCvBaG,E,OAAatD,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4B,SCsDpC,EAhDe,WAAO,IAADqD,EACnBC,GAAwCC,EAAAA,EAAAA,mBAAiBC,GAAA9F,EAAAA,EAAAA,GAAA4F,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BtG,EAAiC,QAA5BmG,EAAGI,EAAaE,IAAI,gBAAQ,IAAAN,EAAAA,EAAI,GAE3C9F,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCqG,EAAMnG,EAAA,GAAEoG,EAASpG,EAAA,GAsBxB,IArBAI,EAAAA,EAAAA,YAAU,WAAO,IAADiG,EACA,KAAV5G,GAAqB,YACD4G,EAAAA,IAAApJ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAAC,IAAA,IAAAkJ,EAAA,OAAApJ,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEgC4B,EAAAA,EAAAA,IAAmBI,GAAO,KAAD,GAA/C6G,EAAa/I,EAAAK,OACkC,IAAhC0I,EAAcvE,eACjC0B,EAAAA,GAAAA,KAAW,iCAAkC,CAC3CC,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,UAAW,MAGfyC,EAAUE,GAAe/I,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgD,GAAAhD,EAAA,SAEzBkG,EAAAA,GAAAA,MAAY,QAAS,CACnBC,SAAUD,EAAAA,GAAAA,SAAAA,SACVE,UAAW,MACV,yBAAApG,EAAAQ,OAAA,GAAAX,EAAA,mBAENY,MAAA,KAAAC,UAAA,CACDsI,EACF,GAAG,CAAC9G,KACC0G,EACH,OAAO,KAGT,IAKMZ,EAAoBY,EAAOrE,QACjC,OACEZ,EAAAA,EAAAA,KAAA,OAAAD,UACED,EAAAA,EAAAA,MAAC2E,EAAU,CAAA1E,SAAA,EACTD,EAAAA,EAAAA,MAAA,QAAMwF,SATS,SAAAC,GACnBA,EAAEC,iBACFT,EAAgB,CAAExG,MAAOgH,EAAEE,OAAOC,SAASnH,MAAMoH,QACjDJ,EAAEE,OAAOG,OACX,EAKmC7F,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAO6F,KAAK,OAAO5F,KAAK,WACxBD,EAAAA,EAAAA,KAAA,UAAQ6F,KAAK,SAAQ9F,SAAC,eAExBC,EAAAA,EAAAA,KAAC8F,EAAkB,CAACzB,kBAAmBA,QAI/C,C","sources":["components/API.js","components/Cast.js","components/reviews.js","pages/MovieDetails/MovieDetailsStyled.js","pages/MovieDetails/MovieDetails.js","components/searchedMoviesList.js","pages/MoviesSearch/StyledMovies.js","pages/MoviesSearch/Movies.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '1e066df6273043e937131fcc939211ac';\nexport const fetchTrending = async () => {\n  const responce = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return responce.data;\n};\nexport const fetchDetailsById = async movie_Id => {\n  const responceDetails = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_Id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return responceDetails.data;\n};\n\nexport const fetchCast = async movie_Id => {\n  const responceCastDetails = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_Id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return responceCastDetails.data;\n};\nexport const fetchReviews = async movie_Id => {\n  const responceReviewsDetails = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_Id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return responceReviewsDetails.data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const responceMovies = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US`\n  );\n  return responceMovies.data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from './API';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState({});\n  useEffect(() => {\n    async function getCastDetails() {\n      try {\n        const fetchedCast = await fetchCast(movieId);\n        setCast(fetchedCast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getCastDetails();\n  }, [movieId]);\n  if (!cast || !cast.cast) {\n    return null;\n  }\n\n  const castArr = cast.cast;\n  const castListItems = castArr.map(actor => {\n    const baseUrl = `https://image.tmdb.org/t/p/w200`;\n    const pictureUrl = `${baseUrl}${actor.profile_path}`;\n\n    return (\n      <li key={actor.id}>\n        <h3>{actor.name}</h3>\n        <p>Role: {actor.character}</p>\n        <img src={pictureUrl} alt=\"\"></img>\n      </li>\n    );\n  });\n  return <ul>{castListItems}</ul>;\n};\nexport default Cast;\n","import { useEffect, useState } from 'react';\nimport { fetchReviews } from './API';\n\nconst { useParams } = require('react-router-dom');\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState({});\n\n  useEffect(() => {\n    async function getReviewsDetails() {\n      try {\n        const fetchedReviews = await fetchReviews(movieId);\n        setReviews(fetchedReviews);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviewsDetails();\n  }, [movieId]);\n  if (!reviews || !reviews.results) {\n    return null;\n  }\n  if (reviews.total_results === 0) {\n    return 'We dont have reviews for this movie.';\n  }\n  const reviewsArr = reviews.results;\n  const reviewsListItems = reviewsArr.map(review => {\n    return (\n      <li key={review.id}>\n        <h3>Author: {review.author}</h3>\n        <article>{review.content}</article>\n      </li>\n    );\n  });\n  return <ul>{reviewsListItems}</ul>;\n};\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-bottom: solid grey 1px;\n`;\nexport const StyledMovieDetailsContainer = styled.div`\n  padding: 20px;\n`;\nexport const StyledBackButton = styled.a`\n  padding-left: 20px;\n`;\n\nexport const StyledAdditionalInfo = styled.div`\n  padding-left: 20px;\n`;\n","import { fetchDetailsById } from 'components/API';\nimport Cast from 'components/Cast';\nimport Reviews from 'components/reviews';\nimport { useEffect, useRef, useState, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  DetailsContainer,\n  StyledMovieDetailsContainer,\n  StyledAdditionalInfo,\n} from './MovieDetailsStyled';\nimport { toast } from 'react-toastify';\n\n \nconst MovieDetails = () => {\n  const location = useLocation();\n  const locationRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n  const [details, setDetails] = useState({});\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        const fetchedDetails = await fetchDetailsById(movieId);\n        setDetails(fetchedDetails);\n      } catch (error) {\n        toast.error('Error 404', {\n          position: toast.POSITION.TOP_LEFT,\n          autoClose: 2000,\n        });\n      }\n    }\n\n    getDetails();\n  }, [movieId]);\n  if (!details || !details.genres) {\n    return null;\n  }\n  const date = `${details.release_date}`;\n  const year = date.slice(0, 4);\n  const baseUrl = `https://image.tmdb.org/t/p/w300`;\n  const posterUrl = `${baseUrl}${details.poster_path}`;\n  const votes = Number(details.vote_average) * 10;\n  const userScore = Math.round(votes);\n  const genresAr = details.genres;\n  const genresListItems = genresAr.map(genre => {\n    return <li key={genre.id}>{genre.name}</li>;\n  });\n  return (\n    <div>\n      <StyledMovieDetailsContainer>\n        <Link to={locationRef.current}>Go Back</Link>\n        <div>\n          <DetailsContainer>\n            <img src={posterUrl} alt={details.original_title}></img>\n            <div>\n              <h1>\n                {details.title} ({year})\n              </h1>\n              <p>User Score: {userScore}%</p>\n              <h2>Overview</h2>\n              <article>{details.overview}</article>\n              <h3>Genres</h3>\n              <ul>{genresListItems}</ul>\n            </div>\n          </DetailsContainer>\n        </div>\n      </StyledMovieDetailsContainer>\n      <StyledAdditionalInfo>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to={`cast`} element={<Cast />}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`reviews`} element={<Reviews />}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </StyledAdditionalInfo>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import MovieDetails from 'pages/MovieDetails/MovieDetails';\n\nimport { Link, useLocation } from 'react-router-dom';\nconst SearchedMoviesList = ({ searchedMoviesArr }) => {\n  const location = useLocation();\n\n  if (!searchedMoviesArr) {\n    return;\n  }\n  const searchedMoviesListItem = searchedMoviesArr.map(searchedMovie => {\n    const movieId = searchedMovie.id;\n\n    return (\n      <li key={searchedMovie.id}>\n        <Link\n          to={`${movieId}`}\n          element={<MovieDetails />}\n          state={{ from: location }}\n        >\n          {searchedMovie.title}\n        </Link>\n      </li>\n    );\n  });\n  return <ul>{searchedMoviesListItem}</ul>;\n};\nexport default SearchedMoviesList;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.div`\n  padding: 20px;\n`;\n","import { fetchMoviesByQuery } from 'components/API';\nimport SearchedMoviesList from 'components/searchedMoviesList';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { StyledForm } from './StyledMovies';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const [movies, setMovies] = useState({});\n  useEffect(() => {\n    if (query === '') return;\n    async function getMovies() {\n      try {\n        const fetchedMovies = await fetchMoviesByQuery(query);\n        if (fetchedMovies && fetchedMovies.total_results === 0) {\n          toast.warn('Sorry, we dont have this movie', {\n            position: toast.POSITION.TOP_CENTER,\n            autoClose: 2000,\n          });\n        }\n        setMovies(fetchedMovies);\n      } catch (error) {\n        toast.error('Error', {\n          position: toast.POSITION.TOP_LEFT,\n          autoClose: 2000,\n        });\n      }\n    }\n    getMovies();\n  }, [query]);\n  if (!movies) {\n    return null;\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.query.value });\n    e.target.reset();\n  };\n  const searchedMoviesArr = movies.results;\n  return (\n    <div>\n      <StyledForm>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"query\"></input>\n          <button type=\"submit\">Search</button>\n        </form>\n        <SearchedMoviesList searchedMoviesArr={searchedMoviesArr} />\n      </StyledForm>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responce","wrap","_context","prev","next","axios","concat","sent","abrupt","data","stop","apply","arguments","fetchDetailsById","_x","_ref2","_callee2","movie_Id","responceDetails","_context2","fetchCast","_x2","_ref3","_callee3","responceCastDetails","_context3","fetchReviews","_x3","_ref4","_callee4","responceReviewsDetails","_context4","fetchMoviesByQuery","_x4","_ref5","_callee5","query","responceMovies","_context5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","_getCastDetails","fetchedCast","t0","console","log","getCastDetails","castListItems","map","actor","pictureUrl","profile_path","_jsxs","children","_jsx","name","character","src","alt","id","require","reviews","setReviews","_getReviewsDetails","fetchedReviews","getReviewsDetails","results","total_results","reviewsListItems","review","author","content","DetailsContainer","styled","_templateObject","_taggedTemplateLiteral","StyledMovieDetailsContainer","_templateObject2","StyledAdditionalInfo","_templateObject3","_templateObject4","_location$state$from","_location$state","location","useLocation","locationRef","useRef","state","from","details","setDetails","_getDetails","fetchedDetails","toast","position","autoClose","getDetails","genres","year","release_date","slice","posterUrl","poster_path","votes","Number","vote_average","userScore","Math","round","genresListItems","genre","Link","to","current","original_title","title","overview","element","Cast","Reviews","Suspense","fallback","Outlet","searchedMoviesArr","searchedMoviesListItem","searchedMovie","MovieDetails","StyledForm","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","movies","setMovies","_getMovies","fetchedMovies","getMovies","onSubmit","e","preventDefault","target","elements","value","reset","type","SearchedMoviesList"],"sourceRoot":""}